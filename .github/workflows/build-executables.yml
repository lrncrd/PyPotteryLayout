name: Build Executables

  on:
    push:
      tags:
        - 'v*'
    workflow_dispatch:
      inputs:
        version:
          description: 'Version number (e.g., 2.0.1)'
          required: true
          default: '2.0.0'

  jobs:
    build:
      strategy:
        matrix:
          os: [windows-latest, macos-latest, ubuntu-latest]
          python-version: ['3.11']
          include:
            - os: windows-latest
              artifact-name: PyPotteryLayout-Windows
              executable-name: PyPotteryLayout.exe
              build-command: pyinstaller --onefile --windowed --add-data "imgs;imgs" --name PyPotteryLayout gui_app.py
            - os: macos-latest
              artifact-name: PyPotteryLayout-macOS
              executable-name: PyPotteryLayout.app
              build-command: pyinstaller --onefile --windowed --add-data "imgs:imgs" --name PyPotteryLayout gui_app.py
            - os: ubuntu-latest
              artifact-name: PyPotteryLayout-Linux
              executable-name: PyPotteryLayout
              build-command: pyinstaller --onefile --windowed --add-data "imgs:imgs" --name PyPotteryLayout gui_app.py

      runs-on: ${{ matrix.os }}

      steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: ${{ matrix.build-command }}

      - name: Create ZIP archive
        shell: bash
        run: |
          mkdir -p dist-final
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp dist/PyPotteryLayout.exe dist-final/
            cd dist-final
            powershell Compress-Archive -Path * -DestinationPath ../${{ matrix.artifact-name }}.zip
          else
            cp dist/PyPotteryLayout dist-final/ 2>/dev/null || true
            chmod +x dist-final/PyPotteryLayout 2>/dev/null || true
            cd dist-final
            zip -r ../${{ matrix.artifact-name }}.zip *
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.zip
